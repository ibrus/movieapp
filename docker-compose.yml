services:
  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8081:8081"
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - kafka
    networks:
      - app-network

  movie-service:
    build:
      context: ./backend/movie-service
      dockerfile: Dockerfile
    container_name: movie-service
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      MONGODB_URI: ${MONGODB_URI}
      TMDB_API_KEY: ${TMDB_API_KEY}
    depends_on:
      - kafka
    networks:
      - app-network

  recommendation-service:
    build:
      context: ./backend/recommendation-service
      dockerfile: Dockerfile
    container_name: recommendation-service
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker

  notification-service:
    build:
      context: ./backend/notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    ports:
      - "8084:8084"
    environment:
      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - kafka
    networks:
      - app-network

  event-streaming:
    build:
      context: ./backend/event-streaming
      dockerfile: Dockerfile
    container_name: event-streaming
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: docker

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - app-network

  kafka:
    image: bitnami/kafka:3.4
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_CREATE_TOPICS=user-registered:1:1
    depends_on:
      - zookeeper
    networks:
      - app-network

networks:
  app-network: